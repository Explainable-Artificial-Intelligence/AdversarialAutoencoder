swagger: '2.0'
info:
  title: Adversarial Autoencoder
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
security:
  # enable OAuth protection for all REST endpoints
  # (only active if the TOKENINFO_URL environment variable is set)
  - oauth2: [uid]
paths:
  /Load/load_dataset:
    get:
      tags: [Load]
      summary: "Load a data set"
      description: "Load the MNIST, the SVHN, the cifar10 or a custom dataset"
      operationId: load_data_set
      parameters:
        - name: dataset_name
          in: query
          type: string
          enum: [MNIST, SVHN, cifar10, custom]
          description: what dataset to load
          default: "MNIST"
      responses:
        200:
          description: Return whether load was successfull
          schema:
            type: boolean
        404:
          description: "File not found"
        415:
          description: "File parsing error"
      x-swagger-router-controller: "swagger_server.controllers.load_controller"

  /Load/get_single_image:
    get:
      tags: [Load]
      operationId: get_single_image
      summary: get a single image
      parameters:
        - name: image_id
          in: query
          type: integer
          description: id of the image to return
          default: 1
        - name: data_subset_name
          in: query
          type: string
          default: "train"
          enum: [train, test, validation]
          description: whether to return a train image, a test image or a validation image
      responses:
        200:
          description: "Image successfully loaded"
          schema:
            type: "array"
            items:
              type: "number"
              format: "double"
        404:
          description: "No data found"
        415:
          description: "Index out of bounds"
      x-swagger-router-controller: "swagger_server.controllers.load_controller"

  /Load/get_single_label:
    get:
      tags: [Load]
      operationId: get_single_label
      summary: get a single label
      parameters:
        - name: label_id
          in: query
          type: integer
          description: id of the label to return
          default: 1
          format: "int32"
        - name: data_subset_name
          in: query
          type: string
          enum: [train, test, validation]
          description: whether to return a train label, a test label or a validation label
          default: "train"
      responses:
        200:
          description: "label successfully returned"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
        404:
          description: "No data found"
        415:
          description: "Index out of bounds"
      x-swagger-router-controller: "swagger_server.controllers.load_controller"

  /Load/get_data_batch:
    get:
      tags: [Load]
      operationId: get_data_batch
      summary: get the next batch
      parameters:
        - name: batch_size
          in: query
          type: "integer"
          description: size of the batch
          default: 100
          format: "int32"
        - name: data_subset_name
          in: query
          type: string
          enum: [train, test, validation]
          description: whether to return from the train, test or the validation set
          default: "train"
      responses:
        200:
          description: "label successfully returned"
          schema:
            type: object
            required: [images, labels]
            properties:
              images:
                type: array
                items:
                  type: "number"
                  format: "double"
              labels:
                type: array
                items:
                  type: "integer"
                  format: "int32"
        404:
          description: "No data found"
        415:
          description: "Index out of bounds"
      x-swagger-router-controller: "swagger_server.controllers.load_controller"

  /Build/buildAAE:
    post:
      tags: [Build]
      summary: passes all learning and ANN parameters to the server
      description: Includes learning parameters and ANN topology
      operationId: build_aae
      parameters:
        - in: "query"
          name: "selected_autoencoder"
          type: string
          enum: ["Unsupervised", "Supervised", "SemiSupervised"]
          description: what autoencoder to use
          default: "Unsupervised"
          format: string
        - in: "body"
          name: "aae_parameters"
          description: "object with all tunable parameters"
          required: true
          schema:
            $ref: "#/definitions/ParameterSet"
      responses:
        200:
          description: "AAE successfully built"
        404:
          description: "Not found"
        415:
          description: "File parsing error"
      x-swagger-router-controller: "swagger_server.controllers.build_controller"

  /Train/controlTraining:
    post:
      tags: [Train]
      summary: starts and stops the training
      description: starts and stops the training of the adv autoencoder
      operationId: control_training
      parameters:
        - in: "query"
          name: "train_status"
          type: string
          enum: [start, stop]
          description: new status for training
          default: "start"
          format: string
      responses:
        200:
          description: "Train status updated"
        404:
          description: "No autoencoder found"
      x-swagger-router-controller: "swagger_server.controllers.train_controller"

  /Train/getPerformance:
    get:
      tags: [Train]
      summary: returns the performance for the adv. autoencoder
      description: returns the losses (encoder, discriminator, generator) over time for the adv. autoencoder
      operationId: get_performance_over_time
      responses:
        200:
          description: "performance successfully returned"
          schema:
            type: object
            required: [autoencoder_losses, discriminator_losses, generator_losses, list_of_epochs,
            discriminator_gaussian_losses, discriminator_categorical_losses, supervised_encoder_loss, accuracy,
            accuracy_epochs]
            properties:
              autoencoder_losses:
                type: array
                items:
                  type: "number"
                  format: "double"
              discriminator_losses:
                type: array
                items:
                  type: "integer"
                  format: "double"
              generator_losses:
                type: array
                items:
                  type: "integer"
                  format: "double"
              list_of_epochs:
                type: array
                items:
                  type: "integer"
                  format: "double"
              discriminator_gaussian_losses:
                type: array
                items:
                  type: "number"
                  format: "double"
              discriminator_categorical_losses:
                type: array
                items:
                  type: "integer"
                  format: "double"
              supervised_encoder_loss:
                type: array
                items:
                  type: "integer"
                  format: "double"
              accuracy:
                type: array
                items:
                  type: "integer"
                  format: "double"
              accuracy_epochs:
                type: array
                items:
                  type: "integer"
                  format: "double"
        404:
          description: "No autoencoder found"
      x-swagger-router-controller: "swagger_server.controllers.train_controller"

  /Train/getLearningRates:
    get:
      tags: [Train]
      summary: returns the learning rates for the adv. autoencoder
      description: returns the learning rates (encoder, discriminator, generator) over time for the adv. autoencoder
      operationId: get_learning_rates
      responses:
        200:
          description: "learning rates successfully returned"
          schema:
            type: object
            required: [autoencoder_lr, discriminator_lr, generator_lr, list_of_epochs, discriminator_g_lr,
            discriminator_c_lr, supervised_encoder_lr]
            properties:
              autoencoder_lr:
                type: array
                items:
                  type: "number"
              discriminator_lr:
                type: array
                items:
                  type: "number"
              generator_lr:
                type: array
                items:
                  type: "number"
              list_of_epochs:
                type: array
                items:
                  type: "number"
              discriminator_g_lr:
                type: array
                items:
                  type: "number"
              discriminator_c_lr:
                type: array
                items:
                  type: "number"
              supervised_encoder_lr:
                type: array
                items:
                  type: "number"
        404:
          description: "No autoencoder to found"
      x-swagger-router-controller: "swagger_server.controllers.train_controller"

  /Train/getMinibatchSummaryVars:
    get:
      tags: [Train]
      summary: returns the variables for the minibatch summary
      description: returns the variables for the minibatch summary
      operationId: get_minibatch_summary_vars
      responses:
        200:
          description: "vars successfully returned"
          schema:
            type: object
            required: [real_dist, latent_representation, discriminator_neg, discriminator_pos, batch_x,
            decoder_output, epoch, b, batch_labels, batch_X_unlabeled, reconstructed_image, real_cat_dist,
            encoder_cat_dist, batch_X_unlabeled_labels, discriminator_gaussian_neg, discriminator_gaussian_pos,
            discriminator_cat_neg, discriminator_cat_pos]
            properties:
              real_dist:
                type: array
                items:
                  type: "number"
              latent_representation:
                type: array
                items:
                  type: "number"
              discriminator_neg:
                type: array
                items:
                  type: "number"
              discriminator_pos:
                type: array
                items:
                  type: "number"
              batch_x:
                type: array
                items:
                  type: "number"
              decoder_output:
                type: array
                items:
                  type: "number"
              epoch:
                type: integer
              b:
                type: integer
              batch_labels:
                type: array
                items:
                  type: "number"

              batch_X_unlabeled:
                type: array
                items:
                  type: "number"
              reconstructed_image:
                type: array
                items:
                  type: "number"
              real_cat_dist:
                type: array
                items:
                  type: "number"
              encoder_cat_dist:
                type: array
                items:
                  type: "number"
              batch_X_unlabeled_labels:
                type: array
                items:
                  type: "number"
              discriminator_gaussian_neg:
                type: array
                items:
                  type: "number"
              discriminator_gaussian_pos:
                type: array
                items:
                  type: "number"
              discriminator_cat_neg:
                type: array
                items:
                  type: "number"
              discriminator_cat_pos:
                type: array
                items:
                  type: "number"
      x-swagger-router-controller: "swagger_server.controllers.train_controller"

  /Visualize/GenerateImageFromSinglePoint:
    get:
      tags: [Visualize]
      operationId: generate_image_from_single_point
      summary: generates the reconstructed image from a single point
      parameters:
        - name: single_point
          in: query
          type: array
          items:
            type: "number"
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              type: "number"
              format: "double"
      x-swagger-router-controller: "swagger_server.controllers.visualize_controller"

  /Visualize/GenerateImageFromSinglePointAndSingleLabel:
    get:
      tags: [Visualize]
      operationId: generate_image_from_single_point_and_single_label
      summary: generates the reconstructed image from a single point
      parameters:
        - name: single_point
          in: query
          type: array
          items:
            type: "number"
        - name: class_label
          in: query
          type: integer
          minimum: 1
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              type: "number"
              format: "double"
      x-swagger-router-controller: "swagger_server.controllers.visualize_controller"


  /Visualize/GenerateImageGrid:
    get:
      tags: [Visualize]
      operationId: generate_image_grid
      summary: generates the reconstructed image from a single point
      responses:
        200:
          description: "success"
      x-swagger-router-controller: "swagger_server.controllers.visualize_controller"

  /Tune:
    get:
      tags: [Tune]
      operationId: swagger_operations.tune
      summary: Get all test
      parameters:
        - name: animal_type
          in: query
          type: string
          pattern: "^[a-zA-Z0-9]*$"
        - name: limit
          in: query
          type: integer
          minimum: 0
          default: 100
      responses:
        200:
          description: Return pets
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'

  /pets:
    get:
      tags: [Pets]
      operationId: swagger_operations.get_pets
      summary: Get all pets
      parameters:
        - name: animal_type
          in: query
          type: string
          pattern: "^[a-zA-Z0-9]*$"
        - name: limit
          in: query
          type: integer
          minimum: 0
          default: 100
      responses:
        200:
          description: Return pets
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
  /pets/{pet_id}:
    get:
      tags: [Pets]
      operationId: swagger_operations.get_pet
      summary: Get a single pet
      parameters:
        - $ref: '#/parameters/pet_id'
      responses:
        200:
          description: Return pet
          schema:
            $ref: '#/definitions/Pet'
        404:
          description: Pet does not exist
    put:
      tags: [Pets]
      operationId: swagger_operations.put_pet
      summary: Create or update a pet
      parameters:
        - $ref: '#/parameters/pet_id'
        - name: pet
          in: body
          schema:
            $ref: '#/definitions/Pet'
      responses:
        200:
          description: Pet updated
        201:
          description: New pet created
    delete:
      tags: [Pets]
      operationId: swagger_operations.delete_pet
      summary: Remove a pet
      parameters:
        - $ref: '#/parameters/pet_id'
      responses:
        204:
          description: Pet was deleted
        404:
          description: Pet does not exist


parameters:
  pet_id:
    name: pet_id
    description: Pet's Unique identifier
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9-]+$"

definitions:
  Pet:
    type: object
    required:
      - name
      - animal_type
    properties:
      id:
        type: string
        description: Unique identifier
        example: "123"
        readOnly: true
      name:
        type: string
        description: Pet's name
        example: "Susie"
        minLength: 1
        maxLength: 100
      animal_type:
        type: string
        description: Kind of animal
        example: "cat"
        minLength: 1
      tags:
        type: object
        description: Custom tags
      created:
        type: string
        format: date-time
        description: Creation time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true
  ParameterSet:
    type: "object"
    properties:
      batch_size:
        type: "integer"
        format: "int32"
        example: 100
      n_epochs:
        type: "integer"
        format: "int32"
        example: 10
      input_dim_x:
        type: "integer"
        format: "int32"
        example: 28
      input_dim_y:
        type: "integer"
        format: "int32"
        example: 28
      z_dim:
        type: "integer"
        format: "int32"
        example: 2
      n_classes:
        type: "integer"
        format: "int32"
        example: 10
      color_scale:
        type: "string"
        example: "gray_scale"
      verbose:
        type: "boolean"
        example: True
      save_final_model:
        type: "boolean"
        example: True # TODO
      write_tensorboard:
        type: "boolean"
        example: False
      n_labeled:
        type: "integer"
        format: "int32"
        example: 1000
      summary_image_frequency:
        type: "integer"
        format: "int32"
        example: 5
      n_neurons_of_hidden_layer_x_autoencoder:
        type: "array"
        example:
        - 1000
        - 500
        - 250
        - 125
        items:
          type: "integer"
          format: "int32"
      n_neurons_of_hidden_layer_x_discriminator:
        type: "array"
        example:
        - 500
        - 250
        - 125
        items:
          type: "integer"
          format: "int32"
      n_neurons_of_hidden_layer_x_discriminator_c:
        type: "array"
        example:
        - 1000
        - 1000
        items:
          type: "integer"
          format: "int32"
      n_neurons_of_hidden_layer_x_discriminator_g:
        type: "array"
        example:
        - 1000
        - 1000
        items:
          type: "integer"
          format: "int32"
      bias_init_value_of_hidden_layer_x_autoencoder:
        type: "array"
        example:
        - 0.0
        - 0.0
        - 0.0
        - 0.0
        - 0.0
        items:
          type: "number"
          format: "double"
      bias_init_value_of_hidden_layer_x_discriminator:
        type: "array"
        example:
        - 0.0
        - 0.0
        - 0.0
        - 0.0
        items:
          type: "number"
          format: "double"
      bias_init_value_of_hidden_layer_x_discriminator_c:
        type: "array"
        example:
        - 0.0
        - 0.0
        - 0.0
        items:
          type: "number"
          format: "double"
      bias_init_value_of_hidden_layer_x_discriminator_g:
        type: "array"
        example:
        - 0.0
        - 0.0
        - 0.0
        items:
          type: "number"
          format: "double"
      activation_function_encoder:
        type: "string"
        example: "relu"
      activation_function_decoder:
        type: "string"
        example: "relu"
      activation_function_discriminator:
        type: "string"
        example: "relu"
      activation_function_discriminator_c:
        type: "string"
        example: "relu"
      activation_function_discriminator_g:
        type: "string"
        example: "relu"
      learning_rate_autoencoder:
        type: "number"
        format: "double"
        example: 0.0001
      learning_rate_discriminator:
        type: "number"
        format: "double"
        example: 0.0001
      learning_rate_generator:
        type: "number"
        format: "double"
        example: 0.0001
      decaying_learning_rate_name_autoencoder:
        type: "string"
        example: "static"
      decaying_learning_rate_name_discriminator:
        type: "string"
        example: "static"
      decaying_learning_rate_name_generator:
        type: "string"
        example: "static"
      optimizer_autoencoder:
        type: "string"
        example: "AdamOptimizer"
      optimizer_discriminator:
        type: "string"
        example: "AdamOptimizer"
      optimizer_generator:
        type: "string"
        example: "AdamOptimizer"
      AdadeltaOptimizer_rho_autoencoder:
        type: "number"
        format: "double"
        example: 0.95
      AdadeltaOptimizer_epsilon_autoencoder:
        type: "number"
        format: "double"
        example: 0.0000001
      AdadeltaOptimizer_rho_discriminator:
        type: "number"
        format: "double"
        example: 0.95
      AdadeltaOptimizer_epsilon_discriminator:
        type: "number"
        format: "double"
        example: 0.0000001
      AdadeltaOptimizer_rho_generator:
        type: "number"
        format: "double"
        example: 0.95
      AdadeltaOptimizer_epsilon_generator:
        type: "number"
        format: "double"
        example: 0.0000001
      AdagradOptimizer_initial_accumulator_value_autoencoder:
        type: "number"
        format: "double"
        example: 0.1
      AdagradOptimizer_initial_accumulator_value_discriminator:
        type: "number"
        format: "double"
        example: 0.1
      AdagradOptimizer_initial_accumulator_value_generator:
        type: "number"
        format: "double"
        example: 0.1
      MomentumOptimizer_momentum_autoencoder:
        type: "number"
        format: "double"
        example: 0.9
      MomentumOptimizer_use_nesterov_autoencoder:
        type: "boolean"
        example: False
      MomentumOptimizer_momentum_discriminator:
        type: "number"
        format: "double"
        example: 0.9
      MomentumOptimizer_use_nesterov_discriminator:
        type: "boolean"
        example: False
      MomentumOptimizer_momentum_generator:
        type: "number"
        format: "double"
        example: 0.9
      MomentumOptimizer_use_nesterov_generator:
        type: "boolean"
        example: False
      AdamOptimizer_beta1_autoencoder:
        type: "number"
        format: "double"
        example: 0.9
      AdamOptimizer_beta2_autoencoder:
        type: "number"
        format: "double"
        example: 0.999
      AdamOptimizer_epsilon_autoencoder:
        type: "number"
        format: "double"
        example: 0.0000001
      AdamOptimizer_beta1_discriminator:
        type: "number"
        format: "double"
        example: 0.9
      AdamOptimizer_beta2_discriminator:
        type: "number"
        format: "double"
        example: 0.999
      AdamOptimizer_epsilon_discriminator:
        type: "number"
        format: "double"
        example: 0.0000001
      AdamOptimizer_beta1_generator:
        type: "number"
        format: "double"
        example: 0.9
      AdamOptimizer_beta2_generator:
        type: "number"
        format: "double"
        example: 0.999
      AdamOptimizer_epsilon_generator:
        type: "number"
        format: "double"
        example: 0.0000001
      FtrlOptimizer_learning_rate_power_autoencoder:
        type: "number"
        format: "double"
        example: -0.5
      FtrlOptimizer_initial_accumulator_value_autoencoder:
        type: "number"
        format: "double"
        example: 0.1
      FtrlOptimizer_l1_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_shrinkage_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_learning_rate_power_discriminator:
        type: "number"
        format: "double"
        example: -0.5
      FtrlOptimizer_initial_accumulator_value_discriminator:
        type: "number"
        format: "double"
        example: 0.1
      FtrlOptimizer_l1_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_shrinkage_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_learning_rate_power_generator:
        type: "number"
        format: "double"
        example: -0.5
      FtrlOptimizer_initial_accumulator_value_generator:
        type: "number"
        format: "double"
        example: 0.1
      FtrlOptimizer_l1_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      FtrlOptimizer_l2_shrinkage_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l1_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l2_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l1_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l2_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l1_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalGradientDescentOptimizer_l2_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_initial_accumulator_value_autoencoder:
        type: "number"
        format: "double"
        example: 0.1
      ProximalAdagradOptimizer_l1_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_l2_regularization_strength_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_initial_accumulator_value_discriminator:
        type: "number"
        format: "double"
        example: 0.1
      ProximalAdagradOptimizer_l1_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_l2_regularization_strength_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_initial_accumulator_value_generator:
        type: "number"
        format: "double"
        example: 0.1
      ProximalAdagradOptimizer_l1_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      ProximalAdagradOptimizer_l2_regularization_strength_generator:
        type: "number"
        format: "double"
        example: 0.0
      RMSPropOptimizer_decay_autoencoder:
        type: "number"
        format: "double"
        example: 0.9
      RMSPropOptimizer_momentum_autoencoder:
        type: "number"
        format: "double"
        example: 0.0
      RMSPropOptimizer_epsilon_autoencoder:
        type: "number"
        format: "double"
        example: 0.000000001
      RMSPropOptimizer_centered_autoencoder:
        type: "boolean"
        example: False
      RMSPropOptimizer_decay_discriminator:
        type: "number"
        format: "double"
        example: 0.9
      RMSPropOptimizer_momentum_discriminator:
        type: "number"
        format: "double"
        example: 0.0
      RMSPropOptimizer_epsilon_discriminator:
        type: "number"
        format: "double"
        example: 0.000000001
      RMSPropOptimizer_centered_discriminator:
        type: "boolean"
        example: False
      RMSPropOptimizer_decay_generator:
        type: "number"
        format: "double"
        example: 0.9
      RMSPropOptimizer_momentum_generator:
        type: "number"
        format: "double"
        example: 0.0
      RMSPropOptimizer_epsilon_generator:
        type: "number"
        format: "double"
        example: 0.000000001
      RMSPropOptimizer_centered_generator:
        type: "boolean"
        example: False
      loss_function_discriminator:
        type: "string"
        example: "sigmoid_cross_entropy"
      loss_function_generator:
        type: "string"
        example: "hinge_loss"

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
